---

- name: define nginx user
  set_fact:
    nginx_user: "{{ __nginx_user }}"
  # register: nginx_debug
  when: nginx_user is not defined
  tags:
    - nginx

- name: add key
  block:
    - apt_key:
        url: "{{ nginx_key_url }}"
    - apt_repository:
        repo: "{{ nginx_repository }}"
      register: nginx_ppa_added
  when: nginx_ppa_use
  tags:
    - nginx

# - name: Add PPA for Nginx.
#   apt_repository:
#     repo: 'ppa:nginx/{{ nginx_ppa_version }}'
#     state: present
#     update_cache: yes
#   register: nginx_ppa_added
#   when: nginx_ppa_use

- name: Ensure nginx will reinstall if the PPA was just added
  apt:
    name: nginx
    state: absent
  when: nginx_ppa_added.changed

- name: Remove default nginx vhost config file (if configured).
  file:
    path: "{{ nginx_default_vhost_path }}"
    state: absent
  when: nginx_remove_default_vhost
  notify: restart nginx

- name: Ensure nginx_vhost_path exists.
  file:
    path: "{{ nginx_vhost_path }}"
    state: directory
  notify: reload nginx

# - name: Add managed vhost config files.
#   template:
#     src: "{{ item.template|default(nginx_vhost_template) }}"
#     dest: "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}"
#     force: yes
#     mode: 0644
#   when: item.state|default('present') != 'absent'
#   with_items: "{{ nginx_vhosts }}"
#   notify: reload nginx

# - name: Remove managed vhost config files.
#   file:
#     path: "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}"
#     state: absent
#   when: item.state|default('present') == 'absent'
#   with_items: "{{ nginx_vhosts }}"
#   notify: reload nginx

# - name: Remove legacy vhosts.conf file.
#   file:
#     path: "{{ nginx_vhost_path }}/vhosts.conf"
#     state: absent
#   notify: reload nginx

- name: install nginx
  apt: 
    name: nginx
  tags:
    - nginx

- name: debug
  debug:
    msg: "{{ nginx_ppa_use }}"